function [trainedFaceModel2Names, validationAccuracy] = trainClassifierFinal(trainingData)
% [trainedFaceModel2Names, validationAccuracy] = trainClassifier(trainingData)
% returns a trained classifier and its accuracy. This code recreates the
% classification model trained in Classification Learner app. Use the
% generated code to automate training the same model with new data, or to
% learn how to programmatically train models.
%
%  Input:
%      trainingData: a table containing the same predictor and response
%       columns as imported into the app.
%
%  Output:
%      trainedFaceModel2Names: a struct containing the trained classifier. The
%       struct contains various fields with information about the trained
%       classifier.
%
%      trainedFaceModel2Names.predictFcn: a function to make predictions on new
%       data.
%
%      validationAccuracy: a double containing the accuracy in percent. In
%       the app, the History list displays this overall accuracy score for
%       each model.
%
% Use the code to train the model with new data. To retrain your
% classifier, call the function from the command line with your original
% data or new data as the input argument trainingData.
%
% For example, to retrain a classifier trained with the original data set
% T, enter:
%   [trainedFaceModel2Names, validationAccuracy] = trainClassifier(T)
%
% To make predictions with the returned 'trainedFaceModel2Names' on new data T2,
% use
%   yfit = trainedFaceModel2Names.predictFcn(T2)
%
% T2 must be a table containing at least the same predictor columns as used
% during training. For details, enter:
%   trainedFaceModel2Names.HowToPredict

% Auto-generated by MATLAB on 31-Jan-2019 02:52:50


% Extract predictors and response
% This code processes the data into the right shape for training the
% model.
inputTable = trainingData;
predictorNames = {'imagefeatures1', 'imagefeatures2', 'imagefeatures3', 'imagefeatures4', 'imagefeatures5', 'imagefeatures6', 'imagefeatures7', 'imagefeatures8', 'imagefeatures9', 'imagefeatures10', 'imagefeatures11', 'imagefeatures12', 'imagefeatures13', 'imagefeatures14', 'imagefeatures15', 'imagefeatures16', 'imagefeatures17', 'imagefeatures18', 'imagefeatures19', 'imagefeatures20', 'imagefeatures21', 'imagefeatures22', 'imagefeatures23', 'imagefeatures24', 'imagefeatures25', 'imagefeatures26', 'imagefeatures27', 'imagefeatures28', 'imagefeatures29', 'imagefeatures30', 'imagefeatures31', 'imagefeatures32', 'imagefeatures33', 'imagefeatures34', 'imagefeatures35', 'imagefeatures36', 'imagefeatures37', 'imagefeatures38', 'imagefeatures39', 'imagefeatures40', 'imagefeatures41', 'imagefeatures42', 'imagefeatures43', 'imagefeatures44', 'imagefeatures45', 'imagefeatures46', 'imagefeatures47', 'imagefeatures48', 'imagefeatures49', 'imagefeatures50', 'imagefeatures51', 'imagefeatures52', 'imagefeatures53', 'imagefeatures54', 'imagefeatures55', 'imagefeatures56', 'imagefeatures57', 'imagefeatures58', 'imagefeatures59', 'imagefeatures60', 'imagefeatures61', 'imagefeatures62', 'imagefeatures63', 'imagefeatures64', 'imagefeatures65', 'imagefeatures66', 'imagefeatures67', 'imagefeatures68', 'imagefeatures69', 'imagefeatures70', 'imagefeatures71', 'imagefeatures72', 'imagefeatures73', 'imagefeatures74', 'imagefeatures75', 'imagefeatures76', 'imagefeatures77', 'imagefeatures78', 'imagefeatures79', 'imagefeatures80', 'imagefeatures81', 'imagefeatures82', 'imagefeatures83', 'imagefeatures84', 'imagefeatures85', 'imagefeatures86', 'imagefeatures87', 'imagefeatures88', 'imagefeatures89', 'imagefeatures90', 'imagefeatures91', 'imagefeatures92', 'imagefeatures93', 'imagefeatures94', 'imagefeatures95', 'imagefeatures96', 'imagefeatures97', 'imagefeatures98', 'imagefeatures99', 'imagefeatures100', 'imagefeatures101', 'imagefeatures102', 'imagefeatures103', 'imagefeatures104', 'imagefeatures105', 'imagefeatures106', 'imagefeatures107', 'imagefeatures108', 'imagefeatures109', 'imagefeatures110', 'imagefeatures111', 'imagefeatures112', 'imagefeatures113', 'imagefeatures114', 'imagefeatures115', 'imagefeatures116', 'imagefeatures117', 'imagefeatures118', 'imagefeatures119', 'imagefeatures120', 'imagefeatures121', 'imagefeatures122', 'imagefeatures123', 'imagefeatures124', 'imagefeatures125', 'imagefeatures126', 'imagefeatures127', 'imagefeatures128', 'imagefeatures129', 'imagefeatures130', 'imagefeatures131', 'imagefeatures132', 'imagefeatures133', 'imagefeatures134', 'imagefeatures135', 'imagefeatures136', 'imagefeatures137', 'imagefeatures138', 'imagefeatures139', 'imagefeatures140', 'imagefeatures141', 'imagefeatures142', 'imagefeatures143', 'imagefeatures144', 'imagefeatures145', 'imagefeatures146', 'imagefeatures147', 'imagefeatures148', 'imagefeatures149', 'imagefeatures150', 'imagefeatures151', 'imagefeatures152', 'imagefeatures153', 'imagefeatures154', 'imagefeatures155', 'imagefeatures156', 'imagefeatures157', 'imagefeatures158', 'imagefeatures159', 'imagefeatures160', 'imagefeatures161', 'imagefeatures162', 'imagefeatures163', 'imagefeatures164', 'imagefeatures165', 'imagefeatures166', 'imagefeatures167', 'imagefeatures168', 'imagefeatures169', 'imagefeatures170', 'imagefeatures171', 'imagefeatures172', 'imagefeatures173', 'imagefeatures174', 'imagefeatures175', 'imagefeatures176', 'imagefeatures177', 'imagefeatures178', 'imagefeatures179', 'imagefeatures180', 'imagefeatures181', 'imagefeatures182', 'imagefeatures183', 'imagefeatures184', 'imagefeatures185', 'imagefeatures186', 'imagefeatures187', 'imagefeatures188', 'imagefeatures189', 'imagefeatures190', 'imagefeatures191', 'imagefeatures192', 'imagefeatures193', 'imagefeatures194', 'imagefeatures195', 'imagefeatures196', 'imagefeatures197', 'imagefeatures198', 'imagefeatures199', 'imagefeatures200', 'imagefeatures201', 'imagefeatures202', 'imagefeatures203', 'imagefeatures204', 'imagefeatures205', 'imagefeatures206', 'imagefeatures207', 'imagefeatures208', 'imagefeatures209', 'imagefeatures210', 'imagefeatures211', 'imagefeatures212', 'imagefeatures213', 'imagefeatures214', 'imagefeatures215', 'imagefeatures216', 'imagefeatures217', 'imagefeatures218', 'imagefeatures219', 'imagefeatures220', 'imagefeatures221', 'imagefeatures222', 'imagefeatures223', 'imagefeatures224', 'imagefeatures225', 'imagefeatures226', 'imagefeatures227', 'imagefeatures228', 'imagefeatures229', 'imagefeatures230', 'imagefeatures231', 'imagefeatures232', 'imagefeatures233', 'imagefeatures234', 'imagefeatures235', 'imagefeatures236', 'imagefeatures237', 'imagefeatures238', 'imagefeatures239', 'imagefeatures240', 'imagefeatures241', 'imagefeatures242', 'imagefeatures243', 'imagefeatures244', 'imagefeatures245', 'imagefeatures246', 'imagefeatures247', 'imagefeatures248', 'imagefeatures249', 'imagefeatures250'};
predictors = inputTable(:, predictorNames);
response = inputTable.person;
isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];

% Train a classifier
% This code specifies all the classifier options and trains the classifier.
classificationSVM = fitcsvm(...
    predictors, ...
    response, ...
    'KernelFunction', 'linear', ...
    'PolynomialOrder', [], ...
    'KernelScale', 'auto', ...
    'BoxConstraint', 1, ...
    'Standardize', true, ...
    'ClassNames', categorical({'Barrett'; 'David'}));

% Create the result struct with predict function
predictorExtractionFcn = @(t) t(:, predictorNames);
svmPredictFcn = @(x) predict(classificationSVM, x);
trainedFaceModel2Names.predictFcn = @(x) svmPredictFcn(predictorExtractionFcn(x));

% Add additional fields to the result struct
trainedFaceModel2Names.RequiredVariables = {'imagefeatures1', 'imagefeatures2', 'imagefeatures3', 'imagefeatures4', 'imagefeatures5', 'imagefeatures6', 'imagefeatures7', 'imagefeatures8', 'imagefeatures9', 'imagefeatures10', 'imagefeatures11', 'imagefeatures12', 'imagefeatures13', 'imagefeatures14', 'imagefeatures15', 'imagefeatures16', 'imagefeatures17', 'imagefeatures18', 'imagefeatures19', 'imagefeatures20', 'imagefeatures21', 'imagefeatures22', 'imagefeatures23', 'imagefeatures24', 'imagefeatures25', 'imagefeatures26', 'imagefeatures27', 'imagefeatures28', 'imagefeatures29', 'imagefeatures30', 'imagefeatures31', 'imagefeatures32', 'imagefeatures33', 'imagefeatures34', 'imagefeatures35', 'imagefeatures36', 'imagefeatures37', 'imagefeatures38', 'imagefeatures39', 'imagefeatures40', 'imagefeatures41', 'imagefeatures42', 'imagefeatures43', 'imagefeatures44', 'imagefeatures45', 'imagefeatures46', 'imagefeatures47', 'imagefeatures48', 'imagefeatures49', 'imagefeatures50', 'imagefeatures51', 'imagefeatures52', 'imagefeatures53', 'imagefeatures54', 'imagefeatures55', 'imagefeatures56', 'imagefeatures57', 'imagefeatures58', 'imagefeatures59', 'imagefeatures60', 'imagefeatures61', 'imagefeatures62', 'imagefeatures63', 'imagefeatures64', 'imagefeatures65', 'imagefeatures66', 'imagefeatures67', 'imagefeatures68', 'imagefeatures69', 'imagefeatures70', 'imagefeatures71', 'imagefeatures72', 'imagefeatures73', 'imagefeatures74', 'imagefeatures75', 'imagefeatures76', 'imagefeatures77', 'imagefeatures78', 'imagefeatures79', 'imagefeatures80', 'imagefeatures81', 'imagefeatures82', 'imagefeatures83', 'imagefeatures84', 'imagefeatures85', 'imagefeatures86', 'imagefeatures87', 'imagefeatures88', 'imagefeatures89', 'imagefeatures90', 'imagefeatures91', 'imagefeatures92', 'imagefeatures93', 'imagefeatures94', 'imagefeatures95', 'imagefeatures96', 'imagefeatures97', 'imagefeatures98', 'imagefeatures99', 'imagefeatures100', 'imagefeatures101', 'imagefeatures102', 'imagefeatures103', 'imagefeatures104', 'imagefeatures105', 'imagefeatures106', 'imagefeatures107', 'imagefeatures108', 'imagefeatures109', 'imagefeatures110', 'imagefeatures111', 'imagefeatures112', 'imagefeatures113', 'imagefeatures114', 'imagefeatures115', 'imagefeatures116', 'imagefeatures117', 'imagefeatures118', 'imagefeatures119', 'imagefeatures120', 'imagefeatures121', 'imagefeatures122', 'imagefeatures123', 'imagefeatures124', 'imagefeatures125', 'imagefeatures126', 'imagefeatures127', 'imagefeatures128', 'imagefeatures129', 'imagefeatures130', 'imagefeatures131', 'imagefeatures132', 'imagefeatures133', 'imagefeatures134', 'imagefeatures135', 'imagefeatures136', 'imagefeatures137', 'imagefeatures138', 'imagefeatures139', 'imagefeatures140', 'imagefeatures141', 'imagefeatures142', 'imagefeatures143', 'imagefeatures144', 'imagefeatures145', 'imagefeatures146', 'imagefeatures147', 'imagefeatures148', 'imagefeatures149', 'imagefeatures150', 'imagefeatures151', 'imagefeatures152', 'imagefeatures153', 'imagefeatures154', 'imagefeatures155', 'imagefeatures156', 'imagefeatures157', 'imagefeatures158', 'imagefeatures159', 'imagefeatures160', 'imagefeatures161', 'imagefeatures162', 'imagefeatures163', 'imagefeatures164', 'imagefeatures165', 'imagefeatures166', 'imagefeatures167', 'imagefeatures168', 'imagefeatures169', 'imagefeatures170', 'imagefeatures171', 'imagefeatures172', 'imagefeatures173', 'imagefeatures174', 'imagefeatures175', 'imagefeatures176', 'imagefeatures177', 'imagefeatures178', 'imagefeatures179', 'imagefeatures180', 'imagefeatures181', 'imagefeatures182', 'imagefeatures183', 'imagefeatures184', 'imagefeatures185', 'imagefeatures186', 'imagefeatures187', 'imagefeatures188', 'imagefeatures189', 'imagefeatures190', 'imagefeatures191', 'imagefeatures192', 'imagefeatures193', 'imagefeatures194', 'imagefeatures195', 'imagefeatures196', 'imagefeatures197', 'imagefeatures198', 'imagefeatures199', 'imagefeatures200', 'imagefeatures201', 'imagefeatures202', 'imagefeatures203', 'imagefeatures204', 'imagefeatures205', 'imagefeatures206', 'imagefeatures207', 'imagefeatures208', 'imagefeatures209', 'imagefeatures210', 'imagefeatures211', 'imagefeatures212', 'imagefeatures213', 'imagefeatures214', 'imagefeatures215', 'imagefeatures216', 'imagefeatures217', 'imagefeatures218', 'imagefeatures219', 'imagefeatures220', 'imagefeatures221', 'imagefeatures222', 'imagefeatures223', 'imagefeatures224', 'imagefeatures225', 'imagefeatures226', 'imagefeatures227', 'imagefeatures228', 'imagefeatures229', 'imagefeatures230', 'imagefeatures231', 'imagefeatures232', 'imagefeatures233', 'imagefeatures234', 'imagefeatures235', 'imagefeatures236', 'imagefeatures237', 'imagefeatures238', 'imagefeatures239', 'imagefeatures240', 'imagefeatures241', 'imagefeatures242', 'imagefeatures243', 'imagefeatures244', 'imagefeatures245', 'imagefeatures246', 'imagefeatures247', 'imagefeatures248', 'imagefeatures249', 'imagefeatures250'};
trainedFaceModel2Names.ClassificationSVM = classificationSVM;
trainedFaceModel2Names.About = 'This struct is a trained model exported from Classification Learner R2018b.';
trainedFaceModel2Names.HowToPredict = sprintf('To make predictions on a new table, T, use: \n  yfit = c.predictFcn(T) \nreplacing ''c'' with the name of the variable that is this struct, e.g. ''trainedModel''. \n \nThe table, T, must contain the variables returned by: \n  c.RequiredVariables \nVariable formats (e.g. matrix/vector, datatype) must match the original training data. \nAdditional variables are ignored. \n \nFor more information, see <a href="matlab:helpview(fullfile(docroot, ''stats'', ''stats.map''), ''appclassification_exportmodeltoworkspace'')">How to predict using an exported model</a>.');

% Extract predictors and response
% This code processes the data into the right shape for training the
% model.
inputTable = trainingData;
predictorNames = {'imagefeatures1', 'imagefeatures2', 'imagefeatures3', 'imagefeatures4', 'imagefeatures5', 'imagefeatures6', 'imagefeatures7', 'imagefeatures8', 'imagefeatures9', 'imagefeatures10', 'imagefeatures11', 'imagefeatures12', 'imagefeatures13', 'imagefeatures14', 'imagefeatures15', 'imagefeatures16', 'imagefeatures17', 'imagefeatures18', 'imagefeatures19', 'imagefeatures20', 'imagefeatures21', 'imagefeatures22', 'imagefeatures23', 'imagefeatures24', 'imagefeatures25', 'imagefeatures26', 'imagefeatures27', 'imagefeatures28', 'imagefeatures29', 'imagefeatures30', 'imagefeatures31', 'imagefeatures32', 'imagefeatures33', 'imagefeatures34', 'imagefeatures35', 'imagefeatures36', 'imagefeatures37', 'imagefeatures38', 'imagefeatures39', 'imagefeatures40', 'imagefeatures41', 'imagefeatures42', 'imagefeatures43', 'imagefeatures44', 'imagefeatures45', 'imagefeatures46', 'imagefeatures47', 'imagefeatures48', 'imagefeatures49', 'imagefeatures50', 'imagefeatures51', 'imagefeatures52', 'imagefeatures53', 'imagefeatures54', 'imagefeatures55', 'imagefeatures56', 'imagefeatures57', 'imagefeatures58', 'imagefeatures59', 'imagefeatures60', 'imagefeatures61', 'imagefeatures62', 'imagefeatures63', 'imagefeatures64', 'imagefeatures65', 'imagefeatures66', 'imagefeatures67', 'imagefeatures68', 'imagefeatures69', 'imagefeatures70', 'imagefeatures71', 'imagefeatures72', 'imagefeatures73', 'imagefeatures74', 'imagefeatures75', 'imagefeatures76', 'imagefeatures77', 'imagefeatures78', 'imagefeatures79', 'imagefeatures80', 'imagefeatures81', 'imagefeatures82', 'imagefeatures83', 'imagefeatures84', 'imagefeatures85', 'imagefeatures86', 'imagefeatures87', 'imagefeatures88', 'imagefeatures89', 'imagefeatures90', 'imagefeatures91', 'imagefeatures92', 'imagefeatures93', 'imagefeatures94', 'imagefeatures95', 'imagefeatures96', 'imagefeatures97', 'imagefeatures98', 'imagefeatures99', 'imagefeatures100', 'imagefeatures101', 'imagefeatures102', 'imagefeatures103', 'imagefeatures104', 'imagefeatures105', 'imagefeatures106', 'imagefeatures107', 'imagefeatures108', 'imagefeatures109', 'imagefeatures110', 'imagefeatures111', 'imagefeatures112', 'imagefeatures113', 'imagefeatures114', 'imagefeatures115', 'imagefeatures116', 'imagefeatures117', 'imagefeatures118', 'imagefeatures119', 'imagefeatures120', 'imagefeatures121', 'imagefeatures122', 'imagefeatures123', 'imagefeatures124', 'imagefeatures125', 'imagefeatures126', 'imagefeatures127', 'imagefeatures128', 'imagefeatures129', 'imagefeatures130', 'imagefeatures131', 'imagefeatures132', 'imagefeatures133', 'imagefeatures134', 'imagefeatures135', 'imagefeatures136', 'imagefeatures137', 'imagefeatures138', 'imagefeatures139', 'imagefeatures140', 'imagefeatures141', 'imagefeatures142', 'imagefeatures143', 'imagefeatures144', 'imagefeatures145', 'imagefeatures146', 'imagefeatures147', 'imagefeatures148', 'imagefeatures149', 'imagefeatures150', 'imagefeatures151', 'imagefeatures152', 'imagefeatures153', 'imagefeatures154', 'imagefeatures155', 'imagefeatures156', 'imagefeatures157', 'imagefeatures158', 'imagefeatures159', 'imagefeatures160', 'imagefeatures161', 'imagefeatures162', 'imagefeatures163', 'imagefeatures164', 'imagefeatures165', 'imagefeatures166', 'imagefeatures167', 'imagefeatures168', 'imagefeatures169', 'imagefeatures170', 'imagefeatures171', 'imagefeatures172', 'imagefeatures173', 'imagefeatures174', 'imagefeatures175', 'imagefeatures176', 'imagefeatures177', 'imagefeatures178', 'imagefeatures179', 'imagefeatures180', 'imagefeatures181', 'imagefeatures182', 'imagefeatures183', 'imagefeatures184', 'imagefeatures185', 'imagefeatures186', 'imagefeatures187', 'imagefeatures188', 'imagefeatures189', 'imagefeatures190', 'imagefeatures191', 'imagefeatures192', 'imagefeatures193', 'imagefeatures194', 'imagefeatures195', 'imagefeatures196', 'imagefeatures197', 'imagefeatures198', 'imagefeatures199', 'imagefeatures200', 'imagefeatures201', 'imagefeatures202', 'imagefeatures203', 'imagefeatures204', 'imagefeatures205', 'imagefeatures206', 'imagefeatures207', 'imagefeatures208', 'imagefeatures209', 'imagefeatures210', 'imagefeatures211', 'imagefeatures212', 'imagefeatures213', 'imagefeatures214', 'imagefeatures215', 'imagefeatures216', 'imagefeatures217', 'imagefeatures218', 'imagefeatures219', 'imagefeatures220', 'imagefeatures221', 'imagefeatures222', 'imagefeatures223', 'imagefeatures224', 'imagefeatures225', 'imagefeatures226', 'imagefeatures227', 'imagefeatures228', 'imagefeatures229', 'imagefeatures230', 'imagefeatures231', 'imagefeatures232', 'imagefeatures233', 'imagefeatures234', 'imagefeatures235', 'imagefeatures236', 'imagefeatures237', 'imagefeatures238', 'imagefeatures239', 'imagefeatures240', 'imagefeatures241', 'imagefeatures242', 'imagefeatures243', 'imagefeatures244', 'imagefeatures245', 'imagefeatures246', 'imagefeatures247', 'imagefeatures248', 'imagefeatures249', 'imagefeatures250'};
predictors = inputTable(:, predictorNames);
response = inputTable.person;
isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];

% Perform cross-validation
partitionedModel = crossval(trainedFaceModel2Names.ClassificationSVM, 'KFold', 5);

% Compute validation predictions
[validationPredictions, validationScores] = kfoldPredict(partitionedModel);

% Compute validation accuracy
validationAccuracy = 1 - kfoldLoss(partitionedModel, 'LossFun', 'ClassifError');
